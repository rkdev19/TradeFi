{
    "name": "AuctionX",
    "structs": {},
    "methods": [
        {
            "name": "create_application",
            "args": [
                {
                    "type": "asset",
                    "name": "asset_id"
                },
                {
                    "type": "uint64",
                    "name": "floor_price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_floor_price",
            "args": [
                {
                    "type": "uint64",
                    "name": "floor_price"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in_to_asset",
            "args": [
                {
                    "type": "pay",
                    "name": "mbrpay"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "place_bid",
            "args": [
                {
                    "type": "pay",
                    "name": "bid_payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "accept_bid",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reject_bid",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "assetid": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRpZA=="
                },
                "floorprice": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Zmxvb3JwcmljZQ=="
                },
                "highest_bid": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aGlnaGVzdF9iaWQ="
                },
                "highest_bidder": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "aGlnaGVzdF9iaWRkZXI="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        157
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        169,
                        181,
                        193,
                        215,
                        237,
                        253
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        257
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        160,
                        172,
                        184,
                        196,
                        218,
                        240
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        321,
                        351,
                        463,
                        557
                    ],
                    "errorMessage": "check self.assetid exists"
                },
                {
                    "pc": [
                        405
                    ],
                    "errorMessage": "check self.floorprice exists"
                },
                {
                    "pc": [
                        396,
                        425,
                        488,
                        528
                    ],
                    "errorMessage": "check self.highest_bid exists"
                },
                {
                    "pc": [
                        411,
                        421,
                        455,
                        467,
                        516,
                        524
                    ],
                    "errorMessage": "check self.highest_bidder exists"
                },
                {
                    "pc": [
                        206,
                        228
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAHoBwQmBQ5oaWdoZXN0X2JpZGRlcgtoaWdoZXN0X2JpZCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdhc3NldGlkCmZsb29ycHJpY2UxG0EAOIIHBIeMuz0EWLQMjAQVdFNaBNZcXG8EqkCbQQRtjViuBDOzSZ42GgCOBwBkAFQAPgAoABwAEAACIkMxGYEFEkQxGESIAX8jQzEZFEQxGESIAUsjQzEZFEQxGESIAQIjQzEZFEQxGEQxFiMJSTgQIxJEiACfI0MxGRREMRhEMRYjCUk4ECMSRIgASyNDMRkURDEYRDYaAReIACwjQzEZFEQxGBRENhoBF8AwNhoCF4gAAiNDigIAK4v+ZycEi/9nKSJnKCpniYoBADEAMgkSRCcEi/9niYoBADEAMgkSRDIKIitlRHAARQEURIv/OAcyChJEi/84CDIBMhAIEkSxIitlRDIKIrISshSyESWyECKyAbOJigEAi/84ADEAEkSL/zgHMgoSRIv/OAhJIillREsBDEQiJwRlRA9EIihlRCoTQQAUsSIoZUQiKWVEsgiyByOyECSyAbMpiwBnKDEAZ4kxADIJEkQiKGVEKhNEsSIrZUQiKGVEI7ISshSyESWyECSyAbOxMgkiKWVEsgiyByOyECSyAbMpImcoKmeJMQAyCRJEIihlRCoTRLEiKGVEIillRLIIsgcjshAksgGzKSJnKCpniTEAMgkSRLEiK2VEMglJshUishKyFLIRJbIQJLIBs7EyCUmyCSKyCLIHI7IQJLIBs4k=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 6,
            "patch": 1
        }
    },
    "events": [],
    "templateVariables": {}
}